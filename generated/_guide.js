export const guide = { "Backend": { "Functional Programming": { "content": [{ "type": "topic-content", "heading": "Functional Programming in Scala by Chiusano and Bjarnason", "section": "<p>Read by:</p><ul><li>Roberto</li><li>Jan</li></ul>" }, { "type": "topic-content", "heading": "FP Simplified by Alvin Alexander", "section": "<p>As the book title, FP Simplified explains the FP concepts and its buzzwords in plain English. Pick this first before touching the Red Book.</p><p>Read by:</p><ul><li>Tammy (recommended)</li><li>Cuno</li></ul>" }, { "type": "topic-content", "heading": "Structure and Interpretation of Computer Programs", "section": "<p>Big but extremely thorough intro into functional programming, without being a course on function programming at all. You will also learn a couple of mathematical foundations of programming.</p><p>Read by:</p><ul><li>Werner</li><li>Jan</li></ul>" }, { "type": "topic-content", "heading": "Learn You a Haskell by Miran Lipovaƒça", "section": "<p>Comical intro into Haskell, in which everything up to the monad are explained. Great first Haskell book, great resource on functional programming.</p><p>Read by:</p><ul><li>Mikel</li><li>Werner (recommended)</li></ul>" }], "name": "Functional Programming", "pathSegments": ["Backend", "Functional Programming"], "Divisble": { "content": [], "name": "Divisble", "pathSegments": ["Backend", "Functional Programming", "Divisble"] }, "Monad": { "content": [], "name": "Monad", "pathSegments": ["Backend", "Functional Programming", "Monad"] }, "BiFunctor": { "content": [], "name": "BiFunctor", "pathSegments": ["Backend", "Functional Programming", "BiFunctor"] }, "Monoid": { "content": [], "name": "Monoid", "pathSegments": ["Backend", "Functional Programming", "Monoid"] }, "ProFunctor": { "content": [], "name": "ProFunctor", "pathSegments": ["Backend", "Functional Programming", "ProFunctor"] }, "Contravariant Functor": { "content": [], "name": "Contravariant Functor", "pathSegments": ["Backend", "Functional Programming", "Contravariant Functor"] }, "Applicative": { "content": [], "name": "Applicative", "pathSegments": ["Backend", "Functional Programming", "Applicative"] }, "Functor": { "content": [], "name": "Functor", "pathSegments": ["Backend", "Functional Programming", "Functor"] }, "Continuations": { "content": [], "name": "Continuations", "pathSegments": ["Backend", "Functional Programming", "Continuations"] }, "Functional Operators on Collections": { "content": [], "name": "Functional Operators on Collections", "pathSegments": ["Backend", "Functional Programming", "Functional Operators on Collections"] }, "Free Monad": { "content": [], "name": "Free Monad", "pathSegments": ["Backend", "Functional Programming", "Free Monad"] }, "Invariant Functor": { "content": [], "name": "Invariant Functor", "pathSegments": ["Backend", "Functional Programming", "Invariant Functor"] }, "Optics": { "Fold": { "content": [], "name": "Fold", "pathSegments": ["Backend", "Functional Programming", "Optics", "Fold"] }, "Prism": { "content": [], "name": "Prism", "pathSegments": ["Backend", "Functional Programming", "Optics", "Prism"] }, "Plated": { "content": [], "name": "Plated", "pathSegments": ["Backend", "Functional Programming", "Optics", "Plated"] }, "Traversal": { "content": [], "name": "Traversal", "pathSegments": ["Backend", "Functional Programming", "Optics", "Traversal"] }, "Iso": { "content": [], "name": "Iso", "pathSegments": ["Backend", "Functional Programming", "Optics", "Iso"] }, "Lens": { "content": [], "name": "Lens", "pathSegments": ["Backend", "Functional Programming", "Optics", "Lens"] } }, "Foldable": { "content": [], "name": "Foldable", "pathSegments": ["Backend", "Functional Programming", "Foldable"] }, "Semigroup": { "content": [], "name": "Semigroup", "pathSegments": ["Backend", "Functional Programming", "Semigroup"] }, "Recursion": { "content": [], "name": "Recursion", "pathSegments": ["Backend", "Functional Programming", "Recursion"] }, "Monad Transformers": { "content": [], "name": "Monad Transformers", "pathSegments": ["Backend", "Functional Programming", "Monad Transformers"] }, "Traversable": { "content": [], "name": "Traversable", "pathSegments": ["Backend", "Functional Programming", "Traversable"] } }, "Databases": { "Relational": { "Transactions": { "ACID": { "content": [], "name": "ACID", "pathSegments": ["Backend", "Databases", "Relational", "Transactions", "ACID"] }, "Isolation Levels": { "content": [], "name": "Isolation Levels", "pathSegments": ["Backend", "Databases", "Relational", "Transactions", "Isolation Levels"] } }, "Database Design": { "content": [{ "type": "topic-content", "heading": "SQL Antipatterns: Avoiding the Pitfalls of Database Programming by Karwin", "section": "<p>This book doesn't only instruct you the right pattern, but also guides you to recognize what a bad database design looks like and how to avoid it. Suitable for all range of developer.</p><p>Read by:</p><ul><li>Tammy</li></ul>" }], "name": "Database Design", "pathSegments": ["Backend", "Databases", "Relational", "Database Design"] }, "Triggers": { "content": [], "name": "Triggers", "pathSegments": ["Backend", "Databases", "Relational", "Triggers"] }, "Indexes": { "content": [], "name": "Indexes", "pathSegments": ["Backend", "Databases", "Relational", "Indexes"] }, "Normalisation": { "content": [], "name": "Normalisation", "pathSegments": ["Backend", "Databases", "Relational", "Normalisation"] }, "Foreign Keys": { "content": [], "name": "Foreign Keys", "pathSegments": ["Backend", "Databases", "Relational", "Foreign Keys"] }, "Views": { "content": [], "name": "Views", "pathSegments": ["Backend", "Databases", "Relational", "Views"] } }, "ORM": { "Object-Relational Mismatch": { "content": [], "name": "Object-Relational Mismatch", "pathSegments": ["Backend", "Databases", "ORM", "Object-Relational Mismatch"] } } }, "Streaming": { "Akka Streams": { "content": [], "name": "Akka Streams", "pathSegments": ["Backend", "Streaming", "Akka Streams"] }, "Backpressure": { "content": [], "name": "Backpressure", "pathSegments": ["Backend", "Streaming", "Backpressure"] }, "CDC": { "content": [], "name": "CDC", "pathSegments": ["Backend", "Streaming", "CDC"] }, "Difference Hot and Cold": { "content": [], "name": "Difference Hot and Cold", "pathSegments": ["Backend", "Streaming", "Difference Hot and Cold"] }, "Stateful Operators": { "Windowed": { "content": [], "name": "Windowed", "pathSegments": ["Backend", "Streaming", "Stateful Operators", "Windowed"] }, "Tables": { "content": [], "name": "Tables", "pathSegments": ["Backend", "Streaming", "Stateful Operators", "Tables"] } }, "Stateless Operators": { "content": [], "name": "Stateless Operators", "pathSegments": ["Backend", "Streaming", "Stateless Operators"] }, "Kafka Streams": { "content": [{ "type": "topic-content", "heading": "See ,[,Kafka,],(../Messaging/Distributed Messaging/Kafka/Kafka Streams.md)", "section": "" }], "name": "Kafka Streams", "pathSegments": ["Backend", "Streaming", "Kafka Streams"] } }, "General Knowledge": { "Data Structures": { "Vector": { "content": [], "name": "Vector", "pathSegments": ["Backend", "General Knowledge", "Data Structures", "Vector"] }, "TreeMap and TreeSet": { "content": [], "name": "TreeMap and TreeSet", "pathSegments": ["Backend", "General Knowledge", "Data Structures", "TreeMap and TreeSet"] }, "LinkedList": { "content": [], "name": "LinkedList", "pathSegments": ["Backend", "General Knowledge", "Data Structures", "LinkedList"] }, "HashMap and HashSet": { "content": [], "name": "HashMap and HashSet", "pathSegments": ["Backend", "General Knowledge", "Data Structures", "HashMap and HashSet"] } }, "SSL": { "content": [], "name": "SSL", "pathSegments": ["Backend", "General Knowledge", "SSL"] }, "Encryption": { "content": [], "name": "Encryption", "pathSegments": ["Backend", "General Knowledge", "Encryption"] }, "Threads and Locks": { "Deadlocks": { "content": [], "name": "Deadlocks", "pathSegments": ["Backend", "General Knowledge", "Threads and Locks", "Deadlocks"] } }, "Generics": { "Coveriance and Contravariance and Invariance": { "content": [], "name": "Coveriance and Contravariance and Invariance", "pathSegments": ["Backend", "General Knowledge", "Generics", "Coveriance and Contravariance and Invariance"] } }, "HTTP": { "content": [], "name": "HTTP", "pathSegments": ["Backend", "General Knowledge", "HTTP"] }, "REST": { "content": [], "name": "REST", "pathSegments": ["Backend", "General Knowledge", "REST"] } }, "Testing": { "Dependency Injection": { "content": [], "name": "Dependency Injection", "pathSegments": ["Backend", "Testing", "Dependency Injection"] }, "Integration Tests": { "content": [], "name": "Integration Tests", "pathSegments": ["Backend", "Testing", "Integration Tests"] }, "Given When Then": { "content": [], "name": "Given When Then", "pathSegments": ["Backend", "Testing", "Given When Then"] }, "Test Pyramid": { "content": [], "name": "Test Pyramid", "pathSegments": ["Backend", "Testing", "Test Pyramid"] }, "Mocking": { "content": [], "name": "Mocking", "pathSegments": ["Backend", "Testing", "Mocking"] }, "End-to-end Tests": { "content": [], "name": "End-to-end Tests", "pathSegments": ["Backend", "Testing", "End-to-end Tests"] } }, "Messaging": { "Traditional MQ": { "JMS": { "content": [], "name": "JMS", "pathSegments": ["Backend", "Messaging", "Traditional MQ", "JMS"] }, "RabbitMQ": { "content": [], "name": "RabbitMQ", "pathSegments": ["Backend", "Messaging", "Traditional MQ", "RabbitMQ"] } }, "Distributed Messaging": { "Kafka": { "content": [{ "type": "topic-content", "heading": "Kafka: The Definitive Guide by Neha Narkhede", "section": "<p>For the most part, I liked the book. It spends some time explaining the internals of Kafka and uses that to explain how to use all those configuration properties (that sometimes intimidate me). It also discusses on a very high-level a multi-datacenter replication set-up, Kafka Connect and Kafka Streams.</p><p>Read by:</p><ul><li>Werner (would recommend)</li></ul>" }, { "type": "topic-content", "heading": "Learn Apache Kafka for Beginners (Udemy)", "section": "<p>By Stephane Maarek</p><p>Watched by:</p>" }, { "type": "topic-content", "heading": "Getting Started With Apache Kafka (Pluralsight)", "section": "<p>By Ryan Plant</p><p>Discusses a good mix of practical examples and Kafka internals.</p><p>Watched by:</p><ul><li>Werner (would recommend)</li></ul>" }], "name": "Kafka", "pathSegments": ["Backend", "Messaging", "Distributed Messaging", "Kafka"], "Security": { "content": [{ "type": "topic-content", "heading": "Kafka Security (Udemy)", "section": "<p>By Stephane Maarek</p><p>Watched by:</p>" }], "name": "Security", "pathSegments": ["Backend", "Messaging", "Distributed Messaging", "Kafka", "Security"] }, "Schema Registry": { "content": [{ "type": "topic-content", "heading": "Confluent Schema Registry & REST Proxy (Udemy)", "section": "<p>By Stephane Maarek</p><p>Watched by:</p>" }, { "type": "topic-content", "heading": "Enforcing Data Contracts with Kafka Schema Registry (Pluralsight)", "section": "<p>By Bogdan Sucaciu</p><p>Watched by:</p><ul><li>Werner</li></ul>" }], "name": "Schema Registry", "pathSegments": ["Backend", "Messaging", "Distributed Messaging", "Kafka", "Schema Registry"] }, "Kafka Connect": { "content": [{ "type": "topic-content", "heading": "Kafka Connect Hands-on Learning (Udemy)", "section": "<p>By Stephane Maarek</p><p>Watched by:</p><ul><li>Werner</li></ul>" }], "name": "Kafka Connect", "pathSegments": ["Backend", "Messaging", "Distributed Messaging", "Kafka", "Kafka Connect"] }, "Administration": { "content": [{ "type": "topic-content", "heading": "Kafka Cluster Setup and Administration (Udemy)", "section": "<p>By Stephane Maarek</p><p>Watched by:</p><ul><li>Werner</li></ul>" }], "name": "Administration", "pathSegments": ["Backend", "Messaging", "Distributed Messaging", "Kafka", "Administration"] }, "Kafka Streams": { "content": [{ "type": "topic-content", "heading": "Kafka Streams for Data Processing (Udemy)", "section": "<p>By Stephane Maarek</p><p>Watched by:</p><ul><li>Werner (would recommend)</li></ul>" }, { "type": "topic-content", "heading": "Designing Event-Driven Systems by Ben Stopford", "section": "<p>Read by:</p><ul><li>Werner (would recommend)</li></ul>" }, { "type": "topic-content", "heading": "Kafka Streams in Action by Bill Bejeck", "section": "<p>I‚Äôm not really a fan of ‚Äúin Action‚Äù books as the quality is usually not very high and this was the case with this book too. It was poorly edited and it although it contained some information that you can‚Äôt easily get from the documentation, I think reading the Kafka Streams documentation (which is quite good by the way) is a better way to spend your time. What I‚Äôm missing from both is a detailed description on</p><ul><li>how Kafka Streams works internally</li><li>how to write your own advanced processors (and gotchas)</li></ul><p>Read by:</p><ul><li>Werner</li></ul>" }], "name": "Kafka Streams", "pathSegments": ["Backend", "Messaging", "Distributed Messaging", "Kafka", "Kafka Streams"] } } }, "Actors": { "Akka": { "content": [], "name": "Akka", "pathSegments": ["Backend", "Messaging", "Actors", "Akka"] } } }, "Cloud": { "Azure": { "content": [], "name": "Azure", "pathSegments": ["Backend", "Cloud", "Azure"] }, "AWS": { "content": [], "name": "AWS", "pathSegments": ["Backend", "Cloud", "AWS"] }, "Docker": { "content": [{ "type": "topic-content", "heading": "Ivo Woltring's tutorial", "section": "<p><a href=\"https://docker-from-scratch.ivonet.nl/\">Ivo Woltring's tutorial</a><br>Provides hands-on tutorial for learning docker. Helpful for beginners</p><p>Read by:</p><ul><li>Tammy (recommended)</li></ul>" }], "name": "Docker", "pathSegments": ["Backend", "Cloud", "Docker"] }, "Kubernetes": { "content": [], "name": "Kubernetes", "pathSegments": ["Backend", "Cloud", "Kubernetes"] } }, "Distributed Systems": { "content": [{ "type": "topic-content", "heading": "Designing Data-Intensive Applications by Martin Kleppmann", "section": "<p>Summary of many different techniques to scale a system out beyond a single server. Mostly useful if you've heard of or learned about many of these techniques at least once before (the book doesn't give a in-depth explanation of these concepts).</p><p>Read by:</p><ul><li>Werner (5 stars)</li><li>Roberto</li><li>Eelco</li></ul>" }, { "type": "topic-content", "heading": "https://www.coursera.org/learn/scala-akka-reactive#syllabus", "section": "<p>Watched by:</p><ul><li>Cuno</li></ul>" }], "name": "Distributed Systems", "pathSegments": ["Backend", "Distributed Systems"], "Consensus Algorithms": { "content": [], "name": "Consensus Algorithms", "pathSegments": ["Backend", "Distributed Systems", "Consensus Algorithms"] }, "CAP Theorem": { "content": [], "name": "CAP Theorem", "pathSegments": ["Backend", "Distributed Systems", "CAP Theorem"] }, "Partitioning or Sharding": { "content": [], "name": "Partitioning or Sharding", "pathSegments": ["Backend", "Distributed Systems", "Partitioning or Sharding"] }, "Distributed Transactions": { "content": [], "name": "Distributed Transactions", "pathSegments": ["Backend", "Distributed Systems", "Distributed Transactions"] }, "Replication": { "Leaderless": { "content": [{ "type": "topic-content", "heading": "Cassandra for developers", "section": "<p>Cassandra is a nice example of a technology that uses leaderless replication. The introduction of the Cassandra Pluralsight course (https://app.pluralsight.com/library/courses/cassandra-developers/table-of-contents) has an understandable intro in this replacation strategy.</p><p>Watched by:</p><ul><li>Werner (would recommend)</li></ul>" }], "name": "Leaderless", "pathSegments": ["Backend", "Distributed Systems", "Replication", "Leaderless"] }, "Leader Follower": { "content": [], "name": "Leader Follower", "pathSegments": ["Backend", "Distributed Systems", "Replication", "Leader Follower"] }, "Multi-leader": { "content": [], "name": "Multi-leader", "pathSegments": ["Backend", "Distributed Systems", "Replication", "Multi-leader"] } }, "Eventual Consistency": { "content": [], "name": "Eventual Consistency", "pathSegments": ["Backend", "Distributed Systems", "Eventual Consistency"] } }, "Programming Languages": { "Bash": { "content": [], "name": "Bash", "pathSegments": ["Backend", "Programming Languages", "Bash"] }, "Typescript": { "content": [], "name": "Typescript", "pathSegments": ["Backend", "Programming Languages", "Typescript"] }, "Kotlin": { "content": [], "name": "Kotlin", "pathSegments": ["Backend", "Programming Languages", "Kotlin"] }, "Java": { "content": [{ "type": "topic-content", "heading": "OCP Study Guide by Boyarsky and Selikoff", "section": "<p>A super thick book (~1200 pages), and the content is just astounding: all-inclusive, very completed but still entertaining to read. Highly recommended, not only for preparing for OCP exams but also for those who are looking for deeper understanding of Java.</p><p>Read by:</p><ul><li>Tammy (recommended)</li></ul>" }], "name": "Java", "pathSegments": ["Backend", "Programming Languages", "Java"] }, "Pyton": { "content": [{ "type": "topic-content", "heading": "Ordina Pythoneers knowledge tree", "section": "<p>Our colleagues from the Pythoneers have their own <a href=\"https://learning.ordina.nl/publish/leerpaden-python-raw--MuXJye_/content/#/lessons/sfum0RnEwSPQk-i39-8IEPMXPsTXS8yc\">knowledge tree</a>.</p><p>Read by:</p>" }], "name": "Pyton", "pathSegments": ["Backend", "Programming Languages", "Pyton"] }, "Scala": { "content": [{ "type": "topic-content", "heading": "Programming in Scala by Odersky", "section": "<p>Very long but very thorough introduction into Scala. Also contains several good tips on general programming practices.</p><p>Read by:</p><ul><li>Tammy</li><li>Werner</li></ul>" }, { "type": "topic-content", "heading": "Scala for the Impatient by Hostmann Cay", "section": "<p>Read by:</p><ul><li>Roberto</li></ul>" }, { "type": "topic-content", "heading": "Introduction to the Art of Programming Using Scala by Lewis", "section": "<p>Actually a textbook for CS1 & CS2, professor Lewis did a great job in explaining many CS concepts by using Scala. Very suitable for beginners.</p><p>Read by:</p><ul><li>Tammy</li></ul>" }], "name": "Scala", "pathSegments": ["Backend", "Programming Languages", "Scala"] } }, "Software Architecture": { "Coupling And Cohesion": { "content": [], "name": "Coupling And Cohesion", "pathSegments": ["Backend", "Software Architecture", "Coupling And Cohesion"] }, "Event Sourcing": { "content": [], "name": "Event Sourcing", "pathSegments": ["Backend", "Software Architecture", "Event Sourcing"] }, "3-tier Architecture": { "content": [], "name": "3-tier Architecture", "pathSegments": ["Backend", "Software Architecture", "3-tier Architecture"] }, "DDD": { "content": [], "name": "DDD", "pathSegments": ["Backend", "Software Architecture", "DDD"] }, "Design Patterns": { "content": [{ "type": "topic-content", "heading": "Refactoring Guru", "section": "<p>https://refactoring.guru/design-patterns</p>" }], "name": "Design Patterns", "pathSegments": ["Backend", "Software Architecture", "Design Patterns"] }, "CQRS": { "content": [], "name": "CQRS", "pathSegments": ["Backend", "Software Architecture", "CQRS"] }, "Enterprise Integration Patterns": { "content": [], "name": "Enterprise Integration Patterns", "pathSegments": ["Backend", "Software Architecture", "Enterprise Integration Patterns"] }, "Message-driven Microservices": { "content": [], "name": "Message-driven Microservices", "pathSegments": ["Backend", "Software Architecture", "Message-driven Microservices"] }, "SOLID": { "content": [], "name": "SOLID", "pathSegments": ["Backend", "Software Architecture", "SOLID"] }, "Clean Architecture": { "content": [{ "type": "topic-content", "heading": "Also: Onion Architeture, Domain-centric architecture.", "section": "" }], "name": "Clean Architecture", "pathSegments": ["Backend", "Software Architecture", "Clean Architecture"] } }, "Tooling": { "Git": { "content": [{ "type": "topic-content", "heading": "Atlassian's tutorial", "section": "<p><a href=\"https://www.atlassian.com/git\">Atlassian's tutorial</a><br>An illustrative A-Z tutorial on learning Git. Actually a docs for Atlassian's BitBucket service. Great resource to not only learn the big picture of Git but also its deeper layer under the water.</p><p>Read by:</p><ul><li>Tammy</li></ul>" }], "name": "Git", "pathSegments": ["Backend", "Tooling", "Git"] } }, "Frameworks": { "Play": { "content": [{ "type": "topic-content", "heading": "Lightbend's Play Essential", "section": "<p>A bit outdated, but it provides a concise overview of the framework. Useful when combined with the official docs.</p><p>Read by:</p><ul><li>Tammy</li></ul>" }], "name": "Play", "pathSegments": ["Backend", "Frameworks", "Play"] } }, "Infrastructure": { "CICD": { "Github Actions": { "content": [], "name": "Github Actions", "pathSegments": ["Backend", "Infrastructure", "CICD", "Github Actions"] }, "CircleCI": { "content": [], "name": "CircleCI", "pathSegments": ["Backend", "Infrastructure", "CICD", "CircleCI"] } }, "Infrastructure As Code": { "Ansible": { "content": [], "name": "Ansible", "pathSegments": ["Backend", "Infrastructure", "Infrastructure As Code", "Ansible"] }, "Terraform": { "content": [], "name": "Terraform", "pathSegments": ["Backend", "Infrastructure", "Infrastructure As Code", "Terraform"] }, "AWS CDK": { "content": [], "name": "AWS CDK", "pathSegments": ["Backend", "Infrastructure", "Infrastructure As Code", "AWS CDK"] } } } }, "Frontend": { "Streaming": { "Websockets": { "content": [], "name": "Websockets", "pathSegments": ["Frontend", "Streaming", "Websockets"] }, "RxJs": { "content": [{ "type": "topic-content", "heading": "Understanding RxJS playlist", "section": "<p>https://www.youtube.com/watch?v=T9wOu11uU6U&list=PL55RiY5tL51pHpagYcrN9ubNLVXF8rGVi </p><p>This playlist starts with explaining what RxJS is and why you would want to use it. It is a good fit for anyone that wants to start investigating RxJS and for all new Angular developers. Everything is explained from the perspective of the UI, making it a very visual explanation.</p><p>Watched by:</p><ul><li>Bart</li></ul>" }, { "type": "topic-content", "heading": "Master RxJS 6 Without Breaking A Sweat", "section": "<p>https://www.udemy.com/course/master-rxjs-without-breaking-a-sweat/</p><p>Watched by:</p><ul><li>Cuno</li></ul>" }, { "type": "topic-content", "heading": "Asynchronous Programming in JavaScript (with Rx.js Observables) by Jafar Husain", "section": "<p>https://frontendmasters.com/courses/asynchronous-javascript/</p><p>An older course, but explains the concepts very well.</p><p>Watched by:</p><ul><li>Cuno</li><li>Mikel</li></ul>" }], "name": "RxJs", "pathSegments": ["Frontend", "Streaming", "RxJs"] } }, "Cloud": { "Azure Functions": { "content": [], "name": "Azure Functions", "pathSegments": ["Frontend", "Cloud", "Azure Functions"] }, "Apache": { "content": [], "name": "Apache", "pathSegments": ["Frontend", "Cloud", "Apache"] }, "NGINX": { "content": [], "name": "NGINX", "pathSegments": ["Frontend", "Cloud", "NGINX"] }, "AWS": { "content": [], "name": "AWS", "pathSegments": ["Frontend", "Cloud", "AWS"] }, "Docker": { "content": [{ "type": "topic-content", "heading": "Complete Intro to Containers by Brian Holt", "section": "<p>https://frontendmasters.com/courses/complete-intro-containers/</p><p>Part of the Codestar Front-end Cloud Study Track, planned for August 2021.</p>" }], "name": "Docker", "pathSegments": ["Frontend", "Cloud", "Docker"] } }, "Programming Languages": { "HTML": { "content": [], "name": "HTML", "pathSegments": ["Frontend", "Programming Languages", "HTML"] }, "Typescript": { "content": [{ "type": "topic-content", "heading": "TypeScript 3 Fundamentals, v2 by Mike North", "section": "<p>https://frontendmasters.com/courses/typescript-v2/</p><p>Watched by:</p><ul><li>Cuno</li></ul>" }], "name": "Typescript", "pathSegments": ["Frontend", "Programming Languages", "Typescript"] }, "CSS and LESS and SASS": { "content": [], "name": "CSS and LESS and SASS", "pathSegments": ["Frontend", "Programming Languages", "CSS and LESS and SASS"] }, "Node": { "content": [], "name": "Node", "pathSegments": ["Frontend", "Programming Languages", "Node"] }, "Javascript": { "content": [{ "type": "topic-content", "heading": "JavaScript: The Hard Parts, v2 by Will Sentance", "section": "<p>https://frontendmasters.com/courses/javascript-hard-parts-v2/</p><p>Will explains in a really nice way how does JS and the browser work.</p><p>It‚Äôs a long course but totally worth it to fully understand closures, event loop, promises, classes and prototype.</p><p>Watched by:</p><ul><li>Mikel (would recommend)</li></ul>" }], "name": "Javascript", "pathSegments": ["Frontend", "Programming Languages", "Javascript"] } }, "Software Architecture": { "Web Workers": { "content": [], "name": "Web Workers", "pathSegments": ["Frontend", "Software Architecture", "Web Workers"] }, "Service Workers": { "content": [], "name": "Service Workers", "pathSegments": ["Frontend", "Software Architecture", "Service Workers"] }, "State Management": { "MobX": { "content": [], "name": "MobX", "pathSegments": ["Frontend", "Software Architecture", "State Management", "MobX"] }, "Redux": { "content": [], "name": "Redux", "pathSegments": ["Frontend", "Software Architecture", "State Management", "Redux"], "Redux Toolkit": { "content": [], "name": "Redux Toolkit", "pathSegments": ["Frontend", "Software Architecture", "State Management", "Redux", "Redux Toolkit"] } }, "NgRx": { "content": [{ "type": "topic-content", "heading": "Angular NgRx: Getting Started by Deborah Kurata", "section": "<p>https://app.pluralsight.com/library/courses/angular-ngrx-getting-started/table-of-contents</p><p>NgRx is a powerful library for organizing and managing state and interactions with the state in your Angular applications following the Redux pattern. Explains the steps with a simple flow.</p><p>Watched by:</p><ul><li>Bart</li></ul>" }, { "type": "topic-content", "heading": "Workshop: Learn NgRx from the Creators of NgRx, Day 1", "section": "<p>https://app.pluralsight.com/library/courses/ng-conf-2020-session-37/table-of-contents</p><p>Go from inactive to reactive when building Angular apps. By the creators of NgRx, Mike Ryan and Brandon Roberts. Explains some FP theory and different kind of map operators (e.g. mergeMap). A couple of steps beyond the mentioned course \"Angular NgRx: Getting Started\".</p><p>Watched by:</p><ul><li>Bart</li></ul>" }], "name": "NgRx", "pathSegments": ["Frontend", "Software Architecture", "State Management", "NgRx"] } }, "Micro Frontends": { "content": [{ "type": "topic-content", "heading": "The Microfrontend Revolution by Manfred Steyer", "section": "<p>https://www.youtube.com/watch?v=Fg2pX79YNa8</p><p>Explains briefly what could be considered a Micro frontend when using Module Federation and shows a demo with Angular. Most notably does this in under 45 minutes, compared to the Udemy course <a href=\"https://www.udemy.com/course/microfrontend-course/learn/lecture/23206924\">Microfrontends with React: A Complete Developer's Guide</a> which is quite dry and takes 9 hours.</p><p>Watched by:</p><ul><li>Martin E.</li></ul>" }, { "type": "topic-content", "heading": "Module Federation in Webpack", "section": "<p>https://webpack.js.org/concepts/module-federation/</p><p>Explains what Module Federation is and how Webpack facilitates it.</p><p>Read by:</p><ul><li>Martin E.</li></ul>" }], "name": "Micro Frontends", "pathSegments": ["Frontend", "Software Architecture", "Micro Frontends"] }, "GraphQL": { "content": [{ "type": "topic-content", "heading": "BFF (Backend For Frontend) @FrontMania by Uri Goldshtein", "section": "<p>https://www.youtube.com/watch?v=g6Mhm9W76jY</p><p>Example use cases for GraphQL.</p><p>Watched by:</p><ul><li>Martin</li></ul>" }, { "type": "topic-content", "heading": "Apollo-link-state - Let's manage state with queries by Sara Vieira", "section": "<p>https://www.youtube.com/watch?v=2RvRcnD8wHY</p><p>Using Apollo Client for state management.</p><p>Watched by:</p><ul><li>Martin</li></ul>" }, { "type": "topic-content", "heading": "Apollo Client in Practice", "section": "<p>https://mdworld.nl/apollo-client-in-practice/</p><p>Practical experience with Apollo Client for state management.</p><p>Read by:</p><ul><li>Martin</li></ul>" }, { "type": "topic-content", "heading": "GraphQL for the Lazy Developer", "section": "<p>https://www.youtube.com/watch?v=EaQt031BByw</p><p>Generating GraphQL front-end and back-end code. Also see the documentation at https://www.graphql-code-generator.com/</p><p>Watched by:</p><ul><li>Martin</li></ul>" }], "name": "GraphQL", "pathSegments": ["Frontend", "Software Architecture", "GraphQL"] }, "Async": { "Callbacks": { "content": [], "name": "Callbacks", "pathSegments": ["Frontend", "Software Architecture", "Async", "Callbacks"] }, "async and await": { "content": [], "name": "async and await", "pathSegments": ["Frontend", "Software Architecture", "Async", "async and await"] }, "Promises": { "content": [], "name": "Promises", "pathSegments": ["Frontend", "Software Architecture", "Async", "Promises"] }, "Generators": { "content": [], "name": "Generators", "pathSegments": ["Frontend", "Software Architecture", "Async", "Generators"] } }, "Progressive Web Apps": { "content": [], "name": "Progressive Web Apps", "pathSegments": ["Frontend", "Software Architecture", "Progressive Web Apps"] } }, "Tools": { "CICD": { "Github Actions": { "content": [], "name": "Github Actions", "pathSegments": ["Frontend", "Tools", "CICD", "Github Actions"] }, "Azure Pipeline": { "content": [], "name": "Azure Pipeline", "pathSegments": ["Frontend", "Tools", "CICD", "Azure Pipeline"] } }, "Chrome Dev Tools": { "content": [], "name": "Chrome Dev Tools", "pathSegments": ["Frontend", "Tools", "Chrome Dev Tools"] }, "NPM and Yarn": { "content": [], "name": "NPM and Yarn", "pathSegments": ["Frontend", "Tools", "NPM and Yarn"] }, "Scaffolding": { "Yeoman": { "content": [], "name": "Yeoman", "pathSegments": ["Frontend", "Tools", "Scaffolding", "Yeoman"] }, "Angular Schematics": { "content": [], "name": "Angular Schematics", "pathSegments": ["Frontend", "Tools", "Scaffolding", "Angular Schematics"] } }, "Git": { "content": [], "name": "Git", "pathSegments": ["Frontend", "Tools", "Git"] } }, "Functional Programming": { "Functional Programming": { "content": [{ "type": "topic-content", "heading": "Functional-Light JavaScript, v3 by Kyle Simpson", "section": "<p>https://frontendmasters.com/courses/functional-javascript-v3/</p><p>Explains FP from a front-end developers perspective, covering (briefly) Immutability, Functional Operators, Recursion, Composition and Monads.</p><p>Watched by:</p><ul><li>Cuno</li><li>Martin E. (v1 and v3)</li></ul>" }, { "type": "topic-content", "heading": "Hardcore Functional Programming in JavaScript, v2 by Brian Lonsdorf", "section": "<p>https://frontendmasters.com/courses/hardcore-js-v2/</p><p>Mathematical introduction to Functional Programming in JavaScript.</p><p>Watched by:</p><ul><li>Cuno</li><li>Martin E. (v1)</li></ul>" }], "name": "Functional Programming", "pathSegments": ["Frontend", "Functional Programming", "Functional Programming"] }, "Composition": { "content": [], "name": "Composition", "pathSegments": ["Frontend", "Functional Programming", "Composition"] }, "Functional Operators": { "content": [], "name": "Functional Operators", "pathSegments": ["Frontend", "Functional Programming", "Functional Operators"] }, "Recursion": { "content": [], "name": "Recursion", "pathSegments": ["Frontend", "Functional Programming", "Recursion"] } }, "Frameworks": { "React Native": { "content": [{ "type": "topic-content", "heading": "React Native: Getting Started by Hendrik Swanepoel", "section": "<p>https://www.pluralsight.com/courses/react-native-getting-started</p><p>Watched by:</p><ul><li>Cuno</li></ul>" }], "name": "React Native", "pathSegments": ["Frontend", "Frameworks", "React Native"] }, "React": { "content": [{ "type": "topic-content", "heading": "Complete Intro to React, v6 by Brian Holt", "section": "<p>https://frontendmasters.com/courses/complete-react-v6/</p><p>Watched by:</p><ul><li>Mikel</li></ul>" }, { "type": "topic-content", "heading": "Intermediate React, v3 by Brian Holt", "section": "<p>https://frontendmasters.com/courses/intermediate-react-v3/</p><p>Watched by:</p><ul><li>Mikel</li></ul>" }], "name": "React", "pathSegments": ["Frontend", "Frameworks", "React"] }, "Angular": { "content": [{ "type": "topic-content", "heading": "Angular Tour of Heroes Tutorial", "section": "<p>https://angular.io/tutorial</p><p>The official Angular tutorial is very detailed and gives any new Angular developer a good starting point as well as a reference for the most common topics.</p><p>Read by:</p><ul><li>Bart</li><li>Martin E.</li></ul><p>Also see the topics on NgRx and RxJS.</p>" }, { "type": "topic-content", "heading": "Angular 9 Fundamentals by Lukas Ruebbelke", "section": "<p>https://frontendmasters.com/courses/angular-9/</p><p>Watched by:</p><ul><li>Cuno</li></ul>" }, { "type": "topic-content", "heading": "Production-Grade Angular by Lukas Ruebbelke", "section": "<p>https://frontendmasters.com/courses/production-angular/</p><p>Watched by:</p><ul><li>Cuno</li></ul>" }], "name": "Angular", "pathSegments": ["Frontend", "Frameworks", "Angular"] }, "Monorepos": { "Nx": { "content": [], "name": "Nx", "pathSegments": ["Frontend", "Frameworks", "Monorepos", "Nx"] }, "Lerna": { "content": [], "name": "Lerna", "pathSegments": ["Frontend", "Frameworks", "Monorepos", "Lerna"] } } } } };
