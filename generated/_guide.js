export const guide = { "Backend": { "Distributed Systems": { "CAP Theorem": { "content": [], "name": "CAP Theorem", "pathSegments": ["Backend", "Distributed Systems", "CAP Theorem"] }, "Partitioning or Sharding": { "content": [], "name": "Partitioning or Sharding", "pathSegments": ["Backend", "Distributed Systems", "Partitioning or Sharding"] }, "Replication": { "Leaderless": { "content": [{ "type": "topic-content", "heading": "Cassandra for developers", "paragraph": ["Cassandra is a nice example of a technology that uses leaderless replication. The introduction of the Cassandra Pluralsight course (https://app.pluralsight.com/library/courses/cassandra-developers/table-of-contents) has an understandable intro in this replacation strategy.", "Watched by:", "*not p element, not yet supported*"] }], "name": "Leaderless", "pathSegments": ["Backend", "Distributed Systems", "Replication", "Leaderless"] }, "Multi-leader": { "content": [], "name": "Multi-leader", "pathSegments": ["Backend", "Distributed Systems", "Replication", "Multi-leader"] }, "Leader Follower": { "content": [], "name": "Leader Follower", "pathSegments": ["Backend", "Distributed Systems", "Replication", "Leader Follower"] } }, "Eventual Consistency": { "content": [], "name": "Eventual Consistency", "pathSegments": ["Backend", "Distributed Systems", "Eventual Consistency"] }, "Consensus Algorithms": { "content": [], "name": "Consensus Algorithms", "pathSegments": ["Backend", "Distributed Systems", "Consensus Algorithms"] }, "Distributed Transactions": { "content": [], "name": "Distributed Transactions", "pathSegments": ["Backend", "Distributed Systems", "Distributed Transactions"] }, "content": [{ "type": "topic-content", "heading": "Designing Data-Intensive Applications by Martin Kleppmann", "paragraph": ["Summary of many different techniques to scale a system out beyond a single server. Mostly useful if you've heard of or learned about many of these techniques at least once before (the book doesn't give a in-depth explanation of these concepts).", "Read by:", "*not p element, not yet supported*"] }, { "type": "topic-content", "heading": "https://www.coursera.org/learn/scala-akka-reactive#syllabus", "paragraph": ["Watched by:", "*not p element, not yet supported*"] }], "name": "Distributed Systems", "pathSegments": ["Backend", "Distributed Systems"] }, "Functional Programming": { "content": [{ "type": "topic-content", "heading": "Functional Programming in Scala by Chiusano and Bjarnason", "paragraph": ["Read by:", "*not p element, not yet supported*"] }, { "type": "topic-content", "heading": "FP Simplified by Alvin Alexander", "paragraph": ["As the book title, FP Simplified explains the FP concepts and its buzzwords in plain English. Pick this first before touching the Red Book.", "Read by:", "*not p element, not yet supported*"] }, { "type": "topic-content", "heading": "Structure and Interpretation of Computer Programs", "paragraph": ["Big but extremely thorough intro into functional programming, without being a course on function programming at all. You will also learn a couple of mathematical foundations of programming.", "Read by:", "*not p element, not yet supported*"] }, { "type": "topic-content", "heading": "Learn You a Haskell by Miran Lipovaƒça", "paragraph": ["Comical intro into Haskell, in which everything up to the monad are explained. Great first Haskell book, great resource on functional programming.", "Read by:", "*not p element, not yet supported*"] }], "name": "Functional Programming", "pathSegments": ["Backend", "Functional Programming"], "Invariant Functor": { "content": [], "name": "Invariant Functor", "pathSegments": ["Backend", "Functional Programming", "Invariant Functor"] }, "Semigroup": { "content": [], "name": "Semigroup", "pathSegments": ["Backend", "Functional Programming", "Semigroup"] }, "Optics": { "Plated": { "content": [], "name": "Plated", "pathSegments": ["Backend", "Functional Programming", "Optics", "Plated"] }, "Prism": { "content": [], "name": "Prism", "pathSegments": ["Backend", "Functional Programming", "Optics", "Prism"] }, "Lens": { "content": [], "name": "Lens", "pathSegments": ["Backend", "Functional Programming", "Optics", "Lens"] }, "Iso": { "content": [], "name": "Iso", "pathSegments": ["Backend", "Functional Programming", "Optics", "Iso"] }, "Fold": { "content": [], "name": "Fold", "pathSegments": ["Backend", "Functional Programming", "Optics", "Fold"] }, "Traversal": { "content": [], "name": "Traversal", "pathSegments": ["Backend", "Functional Programming", "Optics", "Traversal"] } }, "Contravariant Functor": { "content": [], "name": "Contravariant Functor", "pathSegments": ["Backend", "Functional Programming", "Contravariant Functor"] }, "Applicative": { "content": [], "name": "Applicative", "pathSegments": ["Backend", "Functional Programming", "Applicative"] }, "Divisble": { "content": [], "name": "Divisble", "pathSegments": ["Backend", "Functional Programming", "Divisble"] }, "Monad": { "content": [], "name": "Monad", "pathSegments": ["Backend", "Functional Programming", "Monad"] }, "BiFunctor": { "content": [], "name": "BiFunctor", "pathSegments": ["Backend", "Functional Programming", "BiFunctor"] }, "ProFunctor": { "content": [], "name": "ProFunctor", "pathSegments": ["Backend", "Functional Programming", "ProFunctor"] }, "Monad Transformers": { "content": [], "name": "Monad Transformers", "pathSegments": ["Backend", "Functional Programming", "Monad Transformers"] }, "Traversable": { "content": [], "name": "Traversable", "pathSegments": ["Backend", "Functional Programming", "Traversable"] }, "Continuations": { "content": [], "name": "Continuations", "pathSegments": ["Backend", "Functional Programming", "Continuations"] }, "Recursion": { "content": [], "name": "Recursion", "pathSegments": ["Backend", "Functional Programming", "Recursion"] }, "Functional Operators on Collections": { "content": [], "name": "Functional Operators on Collections", "pathSegments": ["Backend", "Functional Programming", "Functional Operators on Collections"] }, "Foldable": { "content": [], "name": "Foldable", "pathSegments": ["Backend", "Functional Programming", "Foldable"] }, "Free Monad": { "content": [], "name": "Free Monad", "pathSegments": ["Backend", "Functional Programming", "Free Monad"] }, "Functor": { "content": [], "name": "Functor", "pathSegments": ["Backend", "Functional Programming", "Functor"] }, "Monoid": { "content": [], "name": "Monoid", "pathSegments": ["Backend", "Functional Programming", "Monoid"] } }, "Programming Languages": { "Java": { "content": [{ "type": "topic-content", "heading": "OCP Study Guide by Boyarsky and Selikoff", "paragraph": ["A super thick book (~1200 pages), and the content is just astounding: all-inclusive, very completed but still entertaining to read. Highly recommended, not only for preparing for OCP exams but also for those who are looking for deeper understanding of Java.", "Read by:", "*not p element, not yet supported*"] }], "name": "Java", "pathSegments": ["Backend", "Programming Languages", "Java"] }, "Kotlin": { "content": [], "name": "Kotlin", "pathSegments": ["Backend", "Programming Languages", "Kotlin"] }, "Bash": { "content": [], "name": "Bash", "pathSegments": ["Backend", "Programming Languages", "Bash"] }, "Scala": { "content": [{ "type": "topic-content", "heading": "Programming in Scala by Odersky", "paragraph": ["Very long but very thorough introduction into Scala. Also contains several good tips on general programming practices.", "Read by:", "*not p element, not yet supported*"] }, { "type": "topic-content", "heading": "Scala for the Impatient by Hostmann Cay", "paragraph": ["Read by:", "*not p element, not yet supported*"] }, { "type": "topic-content", "heading": "Introduction to the Art of Programming Using Scala by Lewis", "paragraph": ["Actually a textbook for CS1 & CS2, professor Lewis did a great job in explaining many CS concepts by using Scala. Very suitable for beginners.", "Read by:", "*not p element, not yet supported*"] }], "name": "Scala", "pathSegments": ["Backend", "Programming Languages", "Scala"] }, "Pyton": { "content": [{ "type": "topic-content", "heading": "Ordina Pythoneers knowledge tree", "paragraph": ["Our colleagues from the Pythoneers have their own  .", "Read by:"] }], "name": "Pyton", "pathSegments": ["Backend", "Programming Languages", "Pyton"] }, "Typescript": { "content": [], "name": "Typescript", "pathSegments": ["Backend", "Programming Languages", "Typescript"] } }, "Messaging": { "Actors": { "Akka": { "content": [], "name": "Akka", "pathSegments": ["Backend", "Messaging", "Actors", "Akka"] } }, "Distributed Messaging": { "Kafka": { "Kafka Connect": { "content": [{ "type": "topic-content", "heading": "Kafka Connect Hands-on Learning (Udemy)", "paragraph": ["By Stephane Maarek", "Watched by:", "*not p element, not yet supported*"] }], "name": "Kafka Connect", "pathSegments": ["Backend", "Messaging", "Distributed Messaging", "Kafka", "Kafka Connect"] }, "Administration": { "content": [{ "type": "topic-content", "heading": "Kafka Cluster Setup and Administration (Udemy)", "paragraph": ["By Stephane Maarek", "Watched by:", "*not p element, not yet supported*"] }], "name": "Administration", "pathSegments": ["Backend", "Messaging", "Distributed Messaging", "Kafka", "Administration"] }, "Security": { "content": [{ "type": "topic-content", "heading": "Kafka Security (Udemy)", "paragraph": ["By Stephane Maarek", "Watched by:"] }], "name": "Security", "pathSegments": ["Backend", "Messaging", "Distributed Messaging", "Kafka", "Security"] }, "Kafka Streams": { "content": [{ "type": "topic-content", "heading": "Kafka Streams for Data Processing (Udemy)", "paragraph": ["By Stephane Maarek", "Watched by:", "*not p element, not yet supported*"] }, { "type": "topic-content", "heading": "Designing Event-Driven Systems by Ben Stopford", "paragraph": ["Read by:", "*not p element, not yet supported*"] }, { "type": "topic-content", "heading": "Kafka Streams in Action by Bill Bejeck", "paragraph": ["I‚Äôm not really a fan of ‚Äúin Action‚Äù books as the quality is usually not very high and this was the case with this book too. It was poorly edited and it although it contained some information that you can‚Äôt easily get from the documentation, I think reading the Kafka Streams documentation (which is quite good by the way) is a better way to spend your time. What I‚Äôm missing from both is a detailed description on", "*not p element, not yet supported*", "Read by:", "*not p element, not yet supported*"] }], "name": "Kafka Streams", "pathSegments": ["Backend", "Messaging", "Distributed Messaging", "Kafka", "Kafka Streams"] }, "Schema Registry": { "content": [{ "type": "topic-content", "heading": "Confluent Schema Registry & REST Proxy (Udemy)", "paragraph": ["By Stephane Maarek", "Watched by:"] }, { "type": "topic-content", "heading": "Enforcing Data Contracts with Kafka Schema Registry (Pluralsight)", "paragraph": ["By Bogdan Sucaciu", "Watched by:", "*not p element, not yet supported*"] }], "name": "Schema Registry", "pathSegments": ["Backend", "Messaging", "Distributed Messaging", "Kafka", "Schema Registry"] }, "content": [{ "type": "topic-content", "heading": "Kafka: The Definitive Guide by Neha Narkhede", "paragraph": ["For the most part, I liked the book. It spends some time explaining the internals of Kafka and uses that to explain how to use all those configuration properties (that sometimes intimidate me). It also discusses on a very high-level a multi-datacenter replication set-up, Kafka Connect and Kafka Streams.", "Read by:", "*not p element, not yet supported*"] }, { "type": "topic-content", "heading": "Learn Apache Kafka for Beginners (Udemy)", "paragraph": ["By Stephane Maarek", "Watched by:"] }, { "type": "topic-content", "heading": "Getting Started With Apache Kafka (Pluralsight)", "paragraph": ["By Ryan Plant", "Discusses a good mix of practical examples and Kafka internals.", "Watched by:", "*not p element, not yet supported*"] }], "name": "Kafka", "pathSegments": ["Backend", "Messaging", "Distributed Messaging", "Kafka"] } }, "Traditional MQ": { "RabbitMQ": { "content": [], "name": "RabbitMQ", "pathSegments": ["Backend", "Messaging", "Traditional MQ", "RabbitMQ"] }, "JMS": { "content": [], "name": "JMS", "pathSegments": ["Backend", "Messaging", "Traditional MQ", "JMS"] } } }, "Software Architecture": { "Design Patterns": { "content": [{ "type": "topic-content", "heading": "Refactoring Guru", "paragraph": ["https://refactoring.guru/design-patterns"] }], "name": "Design Patterns", "pathSegments": ["Backend", "Software Architecture", "Design Patterns"] }, "SOLID": { "content": [], "name": "SOLID", "pathSegments": ["Backend", "Software Architecture", "SOLID"] }, "Enterprise Integration Patterns": { "content": [], "name": "Enterprise Integration Patterns", "pathSegments": ["Backend", "Software Architecture", "Enterprise Integration Patterns"] }, "3-tier Architecture": { "content": [], "name": "3-tier Architecture", "pathSegments": ["Backend", "Software Architecture", "3-tier Architecture"] }, "Message-driven Microservices": { "content": [], "name": "Message-driven Microservices", "pathSegments": ["Backend", "Software Architecture", "Message-driven Microservices"] }, "Coupling And Cohesion": { "content": [], "name": "Coupling And Cohesion", "pathSegments": ["Backend", "Software Architecture", "Coupling And Cohesion"] }, "DDD": { "content": [], "name": "DDD", "pathSegments": ["Backend", "Software Architecture", "DDD"] }, "Clean Architecture": { "content": [{ "type": "topic-content", "heading": "Also: Onion Architeture, Domain-centric architecture.", "paragraph": [] }], "name": "Clean Architecture", "pathSegments": ["Backend", "Software Architecture", "Clean Architecture"] }, "Event Sourcing": { "content": [], "name": "Event Sourcing", "pathSegments": ["Backend", "Software Architecture", "Event Sourcing"] }, "CQRS": { "content": [], "name": "CQRS", "pathSegments": ["Backend", "Software Architecture", "CQRS"] } }, "General Knowledge": { "SSL": { "content": [], "name": "SSL", "pathSegments": ["Backend", "General Knowledge", "SSL"] }, "Data Structures": { "HashMap and HashSet": { "content": [], "name": "HashMap and HashSet", "pathSegments": ["Backend", "General Knowledge", "Data Structures", "HashMap and HashSet"] }, "LinkedList": { "content": [], "name": "LinkedList", "pathSegments": ["Backend", "General Knowledge", "Data Structures", "LinkedList"] }, "TreeMap and TreeSet": { "content": [], "name": "TreeMap and TreeSet", "pathSegments": ["Backend", "General Knowledge", "Data Structures", "TreeMap and TreeSet"] }, "Vector": { "content": [], "name": "Vector", "pathSegments": ["Backend", "General Knowledge", "Data Structures", "Vector"] } }, "Threads and Locks": { "Deadlocks": { "content": [], "name": "Deadlocks", "pathSegments": ["Backend", "General Knowledge", "Threads and Locks", "Deadlocks"] } }, "Generics": { "Coveriance and Contravariance and Invariance": { "content": [], "name": "Coveriance and Contravariance and Invariance", "pathSegments": ["Backend", "General Knowledge", "Generics", "Coveriance and Contravariance and Invariance"] } }, "Encryption": { "content": [], "name": "Encryption", "pathSegments": ["Backend", "General Knowledge", "Encryption"] }, "REST": { "content": [], "name": "REST", "pathSegments": ["Backend", "General Knowledge", "REST"] }, "HTTP": { "content": [], "name": "HTTP", "pathSegments": ["Backend", "General Knowledge", "HTTP"] } }, "Frameworks": { "Play": { "content": [{ "type": "topic-content", "heading": "Lightbend's Play Essential", "paragraph": ["A bit outdated, but it provides a concise overview of the framework. Useful when combined with the official docs.", "Read by:", "*not p element, not yet supported*"] }], "name": "Play", "pathSegments": ["Backend", "Frameworks", "Play"] } }, "Infrastructure": { "CICD": { "Github Actions": { "content": [], "name": "Github Actions", "pathSegments": ["Backend", "Infrastructure", "CICD", "Github Actions"] }, "CircleCI": { "content": [], "name": "CircleCI", "pathSegments": ["Backend", "Infrastructure", "CICD", "CircleCI"] } }, "Infrastructure As Code": { "AWS CDK": { "content": [], "name": "AWS CDK", "pathSegments": ["Backend", "Infrastructure", "Infrastructure As Code", "AWS CDK"] }, "Ansible": { "content": [], "name": "Ansible", "pathSegments": ["Backend", "Infrastructure", "Infrastructure As Code", "Ansible"] }, "Terraform": { "content": [], "name": "Terraform", "pathSegments": ["Backend", "Infrastructure", "Infrastructure As Code", "Terraform"] } } }, "Testing": { "End-to-end Tests": { "content": [], "name": "End-to-end Tests", "pathSegments": ["Backend", "Testing", "End-to-end Tests"] }, "Test Pyramid": { "content": [], "name": "Test Pyramid", "pathSegments": ["Backend", "Testing", "Test Pyramid"] }, "Given When Then": { "content": [], "name": "Given When Then", "pathSegments": ["Backend", "Testing", "Given When Then"] }, "Integration Tests": { "content": [], "name": "Integration Tests", "pathSegments": ["Backend", "Testing", "Integration Tests"] }, "Dependency Injection": { "content": [], "name": "Dependency Injection", "pathSegments": ["Backend", "Testing", "Dependency Injection"] }, "Mocking": { "content": [], "name": "Mocking", "pathSegments": ["Backend", "Testing", "Mocking"] } }, "Databases": { "ORM": { "Object-Relational Mismatch": { "content": [], "name": "Object-Relational Mismatch", "pathSegments": ["Backend", "Databases", "ORM", "Object-Relational Mismatch"] } }, "Relational": { "Transactions": { "ACID": { "content": [], "name": "ACID", "pathSegments": ["Backend", "Databases", "Relational", "Transactions", "ACID"] }, "Isolation Levels": { "content": [], "name": "Isolation Levels", "pathSegments": ["Backend", "Databases", "Relational", "Transactions", "Isolation Levels"] } }, "Triggers": { "content": [], "name": "Triggers", "pathSegments": ["Backend", "Databases", "Relational", "Triggers"] }, "Foreign Keys": { "content": [], "name": "Foreign Keys", "pathSegments": ["Backend", "Databases", "Relational", "Foreign Keys"] }, "Normalisation": { "content": [], "name": "Normalisation", "pathSegments": ["Backend", "Databases", "Relational", "Normalisation"] }, "Database Design": { "content": [{ "type": "topic-content", "heading": "SQL Antipatterns: Avoiding the Pitfalls of Database Programming by Karwin", "paragraph": ["This book doesn't only instruct you the right pattern, but also guides you to recognize what a bad database design looks like and how to avoid it. Suitable for all range of developer.", "Read by:", "*not p element, not yet supported*"] }], "name": "Database Design", "pathSegments": ["Backend", "Databases", "Relational", "Database Design"] }, "Views": { "content": [], "name": "Views", "pathSegments": ["Backend", "Databases", "Relational", "Views"] }, "Indexes": { "content": [], "name": "Indexes", "pathSegments": ["Backend", "Databases", "Relational", "Indexes"] } } }, "Cloud": { "Docker": { "content": [{ "type": "topic-content", "heading": "Ivo Woltring's tutorial", "paragraph": ["Provides hands-on tutorial for learning docker. Helpful for beginners", "Read by:", "*not p element, not yet supported*"] }], "name": "Docker", "pathSegments": ["Backend", "Cloud", "Docker"] }, "Azure": { "content": [], "name": "Azure", "pathSegments": ["Backend", "Cloud", "Azure"] }, "Kubernetes": { "content": [], "name": "Kubernetes", "pathSegments": ["Backend", "Cloud", "Kubernetes"] }, "AWS": { "content": [], "name": "AWS", "pathSegments": ["Backend", "Cloud", "AWS"] } }, "Streaming": { "Akka Streams": { "content": [], "name": "Akka Streams", "pathSegments": ["Backend", "Streaming", "Akka Streams"] }, "Stateless Operators": { "content": [], "name": "Stateless Operators", "pathSegments": ["Backend", "Streaming", "Stateless Operators"] }, "Kafka Streams": { "content": [{ "type": "topic-content", "heading": "See ,[,Kafka,],(../Messaging/Distributed Messaging/Kafka/Kafka Streams.md)", "paragraph": [] }], "name": "Kafka Streams", "pathSegments": ["Backend", "Streaming", "Kafka Streams"] }, "Backpressure": { "content": [], "name": "Backpressure", "pathSegments": ["Backend", "Streaming", "Backpressure"] }, "Difference Hot and Cold": { "content": [], "name": "Difference Hot and Cold", "pathSegments": ["Backend", "Streaming", "Difference Hot and Cold"] }, "Stateful Operators": { "Tables": { "content": [], "name": "Tables", "pathSegments": ["Backend", "Streaming", "Stateful Operators", "Tables"] }, "Windowed": { "content": [], "name": "Windowed", "pathSegments": ["Backend", "Streaming", "Stateful Operators", "Windowed"] } }, "CDC": { "content": [], "name": "CDC", "pathSegments": ["Backend", "Streaming", "CDC"] } }, "Tooling": { "Git": { "content": [{ "type": "topic-content", "heading": "Atlassian's tutorial", "paragraph": ["An illustrative A-Z tutorial on learning Git. Actually a docs for Atlassian's BitBucket service. Great resource to not only learn the big picture of Git but also its deeper layer under the water.", "Read by:", "*not p element, not yet supported*"] }], "name": "Git", "pathSegments": ["Backend", "Tooling", "Git"] } } }, "Frontend": { "Programming Languages": { "Node": { "content": [], "name": "Node", "pathSegments": ["Frontend", "Programming Languages", "Node"] }, "Javascript": { "content": [], "name": "Javascript", "pathSegments": ["Frontend", "Programming Languages", "Javascript"] }, "CSS and LESS and SASS": { "content": [], "name": "CSS and LESS and SASS", "pathSegments": ["Frontend", "Programming Languages", "CSS and LESS and SASS"] }, "Typescript": { "content": [{ "type": "topic-content", "heading": "TypeScript 3 Fundamentals, v2 by Mike North", "paragraph": ["https://frontendmasters.com/courses/typescript-v2/", "Watched by:", "*not p element, not yet supported*"] }], "name": "Typescript", "pathSegments": ["Frontend", "Programming Languages", "Typescript"] }, "HTML": { "content": [], "name": "HTML", "pathSegments": ["Frontend", "Programming Languages", "HTML"] } }, "Tools": { "NPM and Yarn": { "content": [], "name": "NPM and Yarn", "pathSegments": ["Frontend", "Tools", "NPM and Yarn"] }, "Chrome Dev Tools": { "content": [], "name": "Chrome Dev Tools", "pathSegments": ["Frontend", "Tools", "Chrome Dev Tools"] }, "Scaffolding": { "Angular Schematics": { "content": [], "name": "Angular Schematics", "pathSegments": ["Frontend", "Tools", "Scaffolding", "Angular Schematics"] }, "Yeoman": { "content": [], "name": "Yeoman", "pathSegments": ["Frontend", "Tools", "Scaffolding", "Yeoman"] } }, "CICD": { "Github Actions": { "content": [], "name": "Github Actions", "pathSegments": ["Frontend", "Tools", "CICD", "Github Actions"] }, "Azure Pipeline": { "content": [], "name": "Azure Pipeline", "pathSegments": ["Frontend", "Tools", "CICD", "Azure Pipeline"] } }, "Git": { "content": [], "name": "Git", "pathSegments": ["Frontend", "Tools", "Git"] } }, "Software Architecture": { "State Management": { "NgRx": { "content": [{ "type": "topic-content", "heading": "Angular NgRx: Getting Started by Deborah Kurata", "paragraph": ["https://app.pluralsight.com/library/courses/angular-ngrx-getting-started/table-of-contents", "NgRx is a powerful library for organizing and managing state and interactions with the state in your Angular applications following the Redux pattern. Explains the steps with a simple flow.", "Watched by:", "*not p element, not yet supported*"] }, { "type": "topic-content", "heading": "Workshop: Learn NgRx from the Creators of NgRx, Day 1", "paragraph": ["https://app.pluralsight.com/library/courses/ng-conf-2020-session-37/table-of-contents", "Go from inactive to reactive when building Angular apps. By the creators of NgRx, Mike Ryan and Brandon Roberts. Explains some FP theory and different kind of map operators (e.g. mergeMap). A couple of steps beyond the mentioned course \"Angular NgRx: Getting Started\".", "Watched by:", "*not p element, not yet supported*"] }], "name": "NgRx", "pathSegments": ["Frontend", "Software Architecture", "State Management", "NgRx"] }, "MobX": { "content": [], "name": "MobX", "pathSegments": ["Frontend", "Software Architecture", "State Management", "MobX"] }, "Redux": { "Redux Toolkit": { "content": [], "name": "Redux Toolkit", "pathSegments": ["Frontend", "Software Architecture", "State Management", "Redux", "Redux Toolkit"] }, "content": [], "name": "Redux", "pathSegments": ["Frontend", "Software Architecture", "State Management", "Redux"] } }, "Micro Frontends": { "content": [{ "type": "topic-content", "heading": "The Microfrontend Revolution by Manfred Steyer", "paragraph": ["https://www.youtube.com/watch?v=Fg2pX79YNa8", "Explains briefly what could be considered a Micro frontend when using Module Federation and shows a demo with Angular. Most notably does this in under 45 minutes, compared to the Udemy course   which is quite dry and takes 9 hours.", "Watched by:", "*not p element, not yet supported*"] }, { "type": "topic-content", "heading": "Module Federation in Webpack", "paragraph": ["https://webpack.js.org/concepts/module-federation/", "Explains what Module Federation is and how Webpack facilitates it.", "Read by:", "*not p element, not yet supported*"] }], "name": "Micro Frontends", "pathSegments": ["Frontend", "Software Architecture", "Micro Frontends"] }, "Async": { "Callbacks": { "content": [], "name": "Callbacks", "pathSegments": ["Frontend", "Software Architecture", "Async", "Callbacks"] }, "async and await": { "content": [], "name": "async and await", "pathSegments": ["Frontend", "Software Architecture", "Async", "async and await"] }, "Promises": { "content": [], "name": "Promises", "pathSegments": ["Frontend", "Software Architecture", "Async", "Promises"] }, "Generators": { "content": [], "name": "Generators", "pathSegments": ["Frontend", "Software Architecture", "Async", "Generators"] } }, "GraphQL": { "content": [], "name": "GraphQL", "pathSegments": ["Frontend", "Software Architecture", "GraphQL"] }, "Service Workers": { "content": [], "name": "Service Workers", "pathSegments": ["Frontend", "Software Architecture", "Service Workers"] }, "Web Workers": { "content": [], "name": "Web Workers", "pathSegments": ["Frontend", "Software Architecture", "Web Workers"] }, "Progressive Web Apps": { "content": [], "name": "Progressive Web Apps", "pathSegments": ["Frontend", "Software Architecture", "Progressive Web Apps"] } }, "Functional Programming": { "Functional Programming": { "content": [{ "type": "topic-content", "heading": "Functional-Light JavaScript, v3 by Kyle Simpson", "paragraph": ["https://frontendmasters.com/courses/functional-javascript-v3/", "Explains FP from a front-end developers perspective, covering (briefly) Immutability, Functional Operators, Recursion, Composition and Monads.", "Watched by:", "*not p element, not yet supported*"] }, { "type": "topic-content", "heading": "Hardcore Functional Programming in JavaScript, v2 by Brian Lonsdorf", "paragraph": ["https://frontendmasters.com/courses/hardcore-js-v2/", "Mathematical introduction to Functional Programming in JavaScript.", "Watched by:", "*not p element, not yet supported*"] }], "name": "Functional Programming", "pathSegments": ["Frontend", "Functional Programming", "Functional Programming"] }, "Functional Operators": { "content": [], "name": "Functional Operators", "pathSegments": ["Frontend", "Functional Programming", "Functional Operators"] }, "Recursion": { "content": [], "name": "Recursion", "pathSegments": ["Frontend", "Functional Programming", "Recursion"] }, "Composition": { "content": [], "name": "Composition", "pathSegments": ["Frontend", "Functional Programming", "Composition"] } }, "Frameworks": { "React Native": { "content": [{ "type": "topic-content", "heading": "React Native: Getting Started by Hendrik Swanepoel", "paragraph": ["https://www.pluralsight.com/courses/react-native-getting-started", "Watched by:", "*not p element, not yet supported*"] }], "name": "React Native", "pathSegments": ["Frontend", "Frameworks", "React Native"] }, "Monorepos": { "Nx": { "content": [], "name": "Nx", "pathSegments": ["Frontend", "Frameworks", "Monorepos", "Nx"] }, "Lerna": { "content": [], "name": "Lerna", "pathSegments": ["Frontend", "Frameworks", "Monorepos", "Lerna"] } }, "React": { "content": [], "name": "React", "pathSegments": ["Frontend", "Frameworks", "React"] }, "Angular": { "content": [{ "type": "topic-content", "heading": "Angular Tour of Heroes Tutorial", "paragraph": ["https://angular.io/tutorial", "The official Angular tutorial is very detailed and gives any new Angular developer a good starting point as well as a reference for the most common topics.", "Read by:", "*not p element, not yet supported*", "Also see the topics on NgRx and RxJS."] }, { "type": "topic-content", "heading": "Angular 9 Fundamentals by Lukas Ruebbelke", "paragraph": ["https://frontendmasters.com/courses/angular-9/", "Watched by:", "*not p element, not yet supported*"] }, { "type": "topic-content", "heading": "Production-Grade Angular by Lukas Ruebbelke", "paragraph": ["https://frontendmasters.com/courses/production-angular/", "Watched by:", "*not p element, not yet supported*"] }], "name": "Angular", "pathSegments": ["Frontend", "Frameworks", "Angular"] } }, "Cloud": { "Docker": { "content": [], "name": "Docker", "pathSegments": ["Frontend", "Cloud", "Docker"] }, "NGINX": { "content": [], "name": "NGINX", "pathSegments": ["Frontend", "Cloud", "NGINX"] }, "Apache": { "content": [], "name": "Apache", "pathSegments": ["Frontend", "Cloud", "Apache"] }, "Azure Functions": { "content": [], "name": "Azure Functions", "pathSegments": ["Frontend", "Cloud", "Azure Functions"] }, "AWS": { "content": [], "name": "AWS", "pathSegments": ["Frontend", "Cloud", "AWS"] } }, "Streaming": { "RxJs": { "content": [{ "type": "topic-content", "heading": "Understanding RxJS playlist", "paragraph": ["https://www.youtube.com/watch?v=T9wOu11uU6U&list=PL55RiY5tL51pHpagYcrN9ubNLVXF8rGVi ", "This playlist starts with explaining what RxJS is and why you would want to use it. It is a good fit for anyone that wants to start investigating RxJS and for all new Angular developers. Everything is explained from the perspective of the UI, making it a very visual explanation.", "Watched by:", "*not p element, not yet supported*"] }, { "type": "topic-content", "heading": "Master RxJS 6 Without Breaking A Sweat", "paragraph": ["https://www.udemy.com/course/master-rxjs-without-breaking-a-sweat/", "Watched by:", "*not p element, not yet supported*"] }, { "type": "topic-content", "heading": "Asynchronous Programming in JavaScript (with Rx.js Observables)", "paragraph": ["https://frontendmasters.com/courses/asynchronous-javascript/", "An older course, but explains the concepts very well.", "Watched by:", "*not p element, not yet supported*"] }], "name": "RxJs", "pathSegments": ["Frontend", "Streaming", "RxJs"] }, "Websockets": { "content": [], "name": "Websockets", "pathSegments": ["Frontend", "Streaming", "Websockets"] } } } };
